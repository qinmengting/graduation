<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qin.Home.dal.inter.ArtMemberMapper" >
  <resultMap id="BaseResultMap" type="com.qin.Common.entity.domain.ArtMember" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account_type" property="accountType" jdbcType="TINYINT" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="student_ID" property="studentId" jdbcType="CHAR" />
    <result column="teacher" property="teacher" jdbcType="VARCHAR" />
    <result column="Specialty_type" property="specialtyType" jdbcType="TINYINT" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="in_group_time" property="inGroupTime" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modify" property="gmtModify" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, account_type, account_name, mobile, student_ID, teacher, 
    Specialty_type, join_time, in_group_time, remark, gmt_create, gmt_modify
  </sql>
  <select id="queryAllMembers" resultMap="BaseResultMap">
    select * from art_ensemble.art_member;
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qin.Common.entity.domain.ArtMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from art_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from art_member
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from art_member
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qin.Common.entity.domain.ArtMemberExample" >
    delete from art_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qin.Common.entity.domain.ArtMember" >
    insert into art_member (id, username, password, 
      account_type, account_name, mobile, 
      student_ID, teacher, Specialty_type, 
      join_time, in_group_time, remark, 
      gmt_create, gmt_modify)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{accountType,jdbcType=TINYINT}, #{accountName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{studentId,jdbcType=CHAR}, #{teacher,jdbcType=VARCHAR}, #{specialtyType,jdbcType=TINYINT}, 
      #{joinTime,jdbcType=TIMESTAMP}, #{inGroupTime,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qin.Common.entity.domain.ArtMember" >
    insert into art_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountType != null" >
        account_type,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="studentId != null" >
        student_ID,
      </if>
      <if test="teacher != null" >
        teacher,
      </if>
      <if test="specialtyType != null" >
        Specialty_type,
      </if>
      <if test="joinTime != null" >
        join_time,
      </if>
      <if test="inGroupTime != null" >
        in_group_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModify != null" >
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=CHAR},
      </if>
      <if test="teacher != null" >
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="specialtyType != null" >
        #{specialtyType,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null" >
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inGroupTime != null" >
        #{inGroupTime,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qin.Common.entity.domain.ArtMemberExample" resultType="java.lang.Integer" >
    select count(*) from art_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update art_member
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null" >
        account_type = #{record.accountType,jdbcType=TINYINT},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null" >
        student_ID = #{record.studentId,jdbcType=CHAR},
      </if>
      <if test="record.teacher != null" >
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.specialtyType != null" >
        Specialty_type = #{record.specialtyType,jdbcType=TINYINT},
      </if>
      <if test="record.joinTime != null" >
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inGroupTime != null" >
        in_group_time = #{record.inGroupTime,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null" >
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null" >
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update art_member
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=TINYINT},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      student_ID = #{record.studentId,jdbcType=CHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      Specialty_type = #{record.specialtyType,jdbcType=TINYINT},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      in_group_time = #{record.inGroupTime,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qin.Common.entity.domain.ArtMember" >
    update art_member
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null" >
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null" >
        student_ID = #{studentId,jdbcType=CHAR},
      </if>
      <if test="teacher != null" >
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="specialtyType != null" >
        Specialty_type = #{specialtyType,jdbcType=TINYINT},
      </if>
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inGroupTime != null" >
        in_group_time = #{inGroupTime,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null" >
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qin.Common.entity.domain.ArtMember" >
    update art_member
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=TINYINT},
      account_name = #{accountName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      student_ID = #{studentId,jdbcType=CHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      Specialty_type = #{specialtyType,jdbcType=TINYINT},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      in_group_time = #{inGroupTime,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>